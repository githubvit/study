堆排序前传——树与二叉树简介
一，树
    树是一种数据结构，比如：目录结构
    树是一种可以递归定义的数据结构
    树是由n个节点组成的集合：
        如果n=0，那这是一棵空树；
        如果n>0，那存在1个节点作为树的根节点，其他节点可以分为m个集合，每个集合本身又是一棵树。
    一些概念
        根节点
        叶子节点 叶子
        树的深度（高度）层数
        树的度 树杈
        孩子节点/父节点
        子树
二，二叉树
    1，二叉树：度不超过2的树（节点最多有两个叉）
    2，两种特殊二叉树
        满二叉树
        完全二叉树

    3，二叉树的列表存储
        父节点和左孩子节点的编号下标有什么关系？
        0-1 1-3 2-5 3-7 4-9
        i – 2i+1
            序号
                        0
                    1        2
                  3   4    5   6
                 7 8 9 10

            值
                        9
                    8        7
                  6   5    0   1
                 2 4 3

            列表  9 8 7 6 5 0 1 2 3 4

        父节点和右孩子节点的编号下标有什么关系？
        0-2 1-4 2-6 3-8 4-10
        i – 2i+2

        （完全）二叉树可以用列表来存储，通过规律可以从父亲找到孩子或从孩子找到父亲

三，堆

    1，大根堆：
        一棵完全二叉树，满足任一节点都比其孩子节点大
                        9
                    8        7
                  6   5    0   1
                 2 4 3


    2，小根堆：
        一棵完全二叉树，满足任一节点都比其孩子节点小
                        0
                    1        2
                  3   4    5   6
                 7 8 9 10

    3，堆排序过程，代码思路
        3.1 建立堆
            通过从最下层有叶子的子树开始逐级调整，最后可以得到堆。
        3.2 得到堆顶元素，为最大元素
        3.3 去掉堆顶，将堆最后一个元素放到堆顶，此时可通过一次调整重新使堆有序。
        3.4 堆顶元素为第二大元素。
        3.5 重复步骤3，直到堆变空。


