作业：开发一个支持多用户在线的Ftp程序--用socketserver完善FTP作业

要求：

用户加密认证
允许同时多用户登录
每个用户有自己的家目录 ，且只能访问自己的家目录
对用户进行磁盘配额，每个用户的可用空间不同
允许用户在ftp server上随意切换目录
允许用户查看当前目录下文件
允许上传和下载文件，保证文件一致性
文件传输过程中显示进度条
附加功能：支持文件的断点续传
-----------------------------------------
面向对象：写用例、找名词、加属性、连关系
解耦 接口
业务单元：单一功能，比如多用户登陆、认证、上传、下载、日志等
逻辑单元：组织业务单元实现更复杂的功能。
序列化
密码的加密认证md5

作者:Bill
版本:示例版本 v0.1
==============================
程序介绍:
    实现多用户在线的Ftp程序
    功能全部用python的基础知识实现,用到了time\os\sys\json\open\logging\函数\模块知识\面向对象\socket等,
    主要帮给大家一个简单的网络编程的示例



程序结构:
socket网络编程作业--ftp/
├── Readme
├── ftp_server #ftp服务端
│   ├── __init__.py
│   ├── bin #ATM 执行文件 目录
│   │   ├── __init__.py
│   │   ├── atm.py  #ATM 执行程序
│   │   └── manage.py #ATM 管理端,未实现
│   ├── conf #配置文件
│   │   ├── __init__.py
│   │   └── settings.py
│   ├── core #主要程序逻辑都 在这个目录 里
│   │   ├── __init__.py
│   │   ├── accounts.py  #用于从文件里加载和存储账户数据
│   │   ├── auth.py      #用户认证模块
│   │   ├── db_handler.py   #数据库连接引擎
│   │   ├── logger.py       #日志记录模块
│   │   ├── main.py         #主逻辑交互程序
│   │   └── transaction.py  #记账\还钱\取钱等所有的与账户金额相关的操作都 在这
│   ├── db  #用户数据存储的地方
│   │   ├── __init__.py
│   │   ├── account_sample.py #生成一个初始的账户数据 ,把这个数据 存成一个 以这个账户id为文件名的文件,放在accounts目录 就行了,程序自己去会这里找
│   │   └── accounts #存各个用户的账户数据 ,一个用户一个文件
│   │       └── 1234.json #一个用户账户示例文件
│   └── log #日志目录
│       ├── __init__.py
│       ├── access.log #用户访问和操作的相关日志
│       └── transactions.log    #所有的交易日志
└── ftp_client #ftp客户端
    └──

