1、协程
    单线程下实现并发

    并发：看起来是同时运行
    并发实现的本质=切换+保存状态

    操作系统中进程和线程的切换：
        1、遇到IO阻塞会切换（可以提升运行效率）
        2、占用cpu时间过长或者有一个优先级更高的
            任务抢走了cpu

    用应用程序来模拟操作系统中的切换+保存状态，实现单线程下的多任务并发，就是协程。

    并发、并行、串行：
        并发：看起来是同时运行，切换+保存状态
        
        并行：真正意义上的同时运行，只有在多cpu的情况下才能实现并行，如4个cpu能够并行4个任务
    
        串行：一个人完完整整地执行完毕才运行下一个任务

2、协程实现
    方式一：yield、greenlet方式 并不是高效率的
        yield、greenlet
        特点：无法检测单线程下的IO行为，
            无法实现遇到IO自动切换到其他任务执行的操作


    方式二：gevent 给io标记 实现遇到IO自动切换到其他任务执行的操作 这种协程是高效的。
        from gevent import monkey;monkey.patch_all()
        import gevent
        import time
        time.sleep(3)