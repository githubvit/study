io多路复用：
select：
    在非阻塞io的基础上，代理套接字对象和系统打交道，通过设置超时， 轮询  一堆 套接字对象的wait for data，
    从而可以避免非阻塞io的cpu高占用。
    对于select io多路复用，随着套接字对象的大量增加，就会增加select的轮询时间。
    所以其效率，会随着套接字对象的大量增加而降低。
    因此有最大连接数的限制，默认是1024，即最大轮询1024个套接字对象。

poll: 和select一样，取消了数量限制，增加了套接字对象数量。但还是轮询。一样会随着对象数量的增加，降低效率。

epoll: 
    和selec不同，在把套接字对象放入列表的时候，给每个套接字对象绑定一个回调。
    这样当某个套接字对象好了的时候，会自动触发回调，放入准备好的列表里，就不用轮询了。
    效率比select io多路复用就高了。
    把原来select的主动轮询方式变为每个套接字自动提交的方式，这样就不会随着套接字对象的增加而降低效率。
