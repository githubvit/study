# 根据 题型（填空、选择、判断、计算、应用题等） 分数  选出100或120分的试卷


# 配置config
    # 题型字典 xscmath_type_dict={
    '填空':'tk',
    '选择':'xz',
    '判断':'pd',
    '计算':'js',
    '应用题':'yyt',
    # }
# 题库生成
    # 1 题库列表 tklist=[
    # ('题型','分值','年级','知识点','书名','页码','题号','记录字典'),
    # ...,
    # ]
        # 记录列表 recode_dict=[
        # ['出卷时间'，'卷名'，'答题时间','解答记录']
        # ]
    # 2 题库目录
    #  结构： 
        # 每题的目录名- '题型','分值','年级','知识点','书名','页码','题号'
            #   题目 文件 格式：html
            #   解答 文件 格式：html
   
    # 3 题库字典函数 存到mongodb中的xxx数据库中（xscmath—exerciseses）
    def tkdict(tklist):
        pass

# 试卷配置
    # 1 考卷 总分 full_mark
    # 2 分值题型分布 type_mark_dics={
    'tk_mark':30%,
    'xz_mark':15%,
    'js_mark':20%,
    'yyt_mark':45%,

    # }


    # 考试（exam）卷 字典：
    exam_dict={}
    # 根据需要的题型,定义列表
    exam_dict['tk']=[]
    exam_dict['xz']=[]
    exam_dict['pd']=[]
    exam_dict['js']=[]
    exam_dict['yyt']=[]

# 试卷函数
    def exam(examconfig):
        pass
# 出卷模型
    # 总分
    # 题型 总分 题目数量（每题的分数）
    # 出卷的模型 字典 cj_dict={
    # '总分':xxx,    
    # '题型1':(单分值，题目数量),
    # '题型2':(单分值，题目数量),
    # ...
    # '题型n':(单分值，题目数量),
    # }

# 选题的要求：
    # 1. 按权重
    # 2. 权重的计算：
    #     这题做错过 错的多，
    #     这题没做过 时间长

    # 3. 同权重则随机

# 服务器端 数据库 题库
# ----------------
# 客户端-浏览器
    # 生产端 填充数据库 题库
    # 出卷端 提交出卷参数 得到试卷和解答卷
    # 考试端 
        # 选取考卷 
        # 开始考试 答题 
        # 结束考试 或时间到 终止考试 
        # 考卷分析 考试时间线
                # 0:0   开始
                # xx:xx 大题号.小题号
                # xx:xx 大题号.小题号
                # ...
                # xx:xx 结束
